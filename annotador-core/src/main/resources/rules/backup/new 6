# DATES ENGLISH
# Example to add "DATEPRP" as ner tag, and ISO code as the normalized tag for strings matching a color

# Case insensitive pattern matching (see java.util.regex.Pattern flags)
ENV.defaultStringPatternFlags = 2

# Map variable names to annotation keys
 myNER = { type: "CLASS", value: "oeg.annotador.core.time.tictag.myNER$MyNamedEntityTagAnnotation" }
 myNERnormalized = { type: "CLASS", value: "oeg.annotador.core.time.tictag.myNER$MyNormalizedNamedEntityTagAnnotation" }

ner = { type: "CLASS", value: "edu.stanford.nlp.ling.CoreAnnotations$NamedEntityTagAnnotation" }
normalized = { type: "CLASS", value: "edu.stanford.nlp.ling.CoreAnnotations$NormalizedNamedEntityTagAnnotation" }
tokens = { type: "CLASS", value: "edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation" }

# Create OR pattern of
#  regular expression over temporal expressions
$MONTHS = (
  /enero/     => "01" |
  /febrero/   => "02" |
  /marzo/    => "03" |
  [/abril/ & !{ pos:/PROPN.*/ }]   => "04" | #TODO: Check this...
  /mayo/   => "05" |
  /junio/    => "06" |
  [/julio/ & !{ pos:/PROPN.*/ }]    => "07" | #TODO: Check this...
  /agosto/    => "08" |
  /septiembre/    => "08" |
  /octubre/    => "10" |
  /noviembre/    => "11" |
  /diciembre/    => "12"
)

$WEEKL = (
  /lunes/     => "01" |
  /martes/   => "02" |
  /miércoles/    => "03" |
  /jueves/     => "04" |
  /viernes/   => "05" |
  /sábado/    => "06" |
  [/domingo/ & !{ pos:/PROPN.*/ }]    => "07"
) 

$DAYMONTHN = (
  /01|1/ => "01" |
  /02|2/   => "02" |
  /03|3/    => "03" |
  /04|4/     => "04" |
  /05|5/   => "05" |
  /06|6/    => "06" |  
  /07|7/    => "07" |
  /08|8/     => "08" |
  /09|9/   => "09" |
  /10/   => "10" |
  /11/   => "11" |
  /12/   => "12" |
  /13/   => "13" |
  /14/   => "14" |
  /15/   => "15" |
  /16/   => "16" |
  /17/   => "17" |
  /18/   => "18" |
  /19/   => "19" |
  /20/   => "20" |
  /20/   => "20" |
  /21/   => "21" |
  /22/   => "22" |
  /23/   => "23" |
  /24/   => "24" |
  /25/   => "25" |
  /26/   => "26" |
  /27/   => "27" |
  /28/   => "28" |
  /29/   => "29" |
  /30/   => "30" |
  /31/   => "31" 
)

$MONTHN = (
  /01|1/ => "01" |
  /02|2/   => "02" |
  /03|3/    => "03" |
  /04|4/     => "04" |
  /05|5/   => "05" |
  /06|6/    => "06" |  
  /07|7/    => "07" |
  /08|8/     => "08" |
  /09|9/   => "09" |
  /10/   => "10" |
  /11/   => "11" |
  /12/   => "12"
)

$YEARN = ( /[12]\d\d\d/ );

$YEARDIG = (
  /dos mil/ => 2000 |
  /mil/ => 1000
)

$CENTDIG = (
  /ciento/ => 100 |
  /doscientos/ => 200 |
  /trescientos/ => 300 |
  /cuatrocientos/ => 400 |
  /quinientos/ => 500 |
  /seiscientos/ => 600 |
  /setecientos/ => 700 |
  /ochocientos/ => 800 |
  /novecientos/ => 900
)

$DECSDIG  = (
  /diez/ => 10 |
  /veinte/ => 20 |
  /treinta/ => 30 |
  /cuarenta/ => 40 |
  /cincuenta/ => 50 |
  /sesenta/ => 60 |
  /setenta/ => 70 |
  /ochenta/ => 80 |
  /noventa/ => 90
)

$UNSDIG = (
  /uno/ => 1 |
  /dos/ => 2 |
  /tres/ => 3 |
  /cuatro/ => 4 |
  /cinco/ => 5 |
  /seis/ => 6 |
  /siete/ => 7 |
  /ocho/ => 8 |
  /nueve/ => 9
)

$SPECIALSDIG = (
  /once/ => 11 |
  /doce/ => 12 |
  /trece/ => 13 |
  /catorce/ => 14 |
  /quince/ => 15 |
  /dieciseis/ => 16 |
  /diecisiete/ => 17 |
  /dieciocho/ => 18 |
  /diecinueve/ => 19 |
  /veintiuno/ => 21 |
  /veintidos/ => 22 |
  /veintitres/ => 23 |
  /vienticuatro/ => 24 |
  /vienticinco/ => 25 |
  /vientiseis/ => 26 |
  /vientisiete/ => 27 |
  /vientiocho/ => 28 |
  /vientinueve/ => 29
)

# Define ruleType to be over tokens
ENV.defaults["ruleType"] = "tokens"

# Define rule that
#  upon matching pattern defined by $Color
#  annotate matched tokens ($0) with myNER="DATEPRP" and myNERnormalized=matched value ($$0.value)
{ pattern:( $MONTHS ),
  result: "UNIQUE_NER_TAG", action: ( Annotate($0, myNER, "MONTH"), Annotate($0, myNERnormalized, $$0.value ) ) }
  
  
{ pattern: ( $WEEKL ),
  result: "UNIQUE_NER_TAG", action: ( Annotate($0, myNER, "WEEKDAY"), Annotate($0, myNERnormalized, Aggregate(Add,$$0.value) ) }
  
{ pattern: ( $DAYMONTHN ),
  result: "UNIQUE_NER_TAG", action: ( Annotate($0, myNER, "DAYMONTH"), Annotate($0, myNERnormalized, $$0.value ) ) }
  
{ pattern: ( $MONTHN ),
  result: "UNIQUE_NER_TAG", action: ( Annotate($0, myNER, "MONTH"), Annotate($0, myNERnormalized, $$0.value ) ) }
  
{ pattern: ( $YEARN ),
  result: "UNIQUE_NER_TAG", action: ( Annotate($0, myNER, "YEAR"), Annotate($0, myNERnormalized, $$0.text ) ) }
  
#{ pattern: ( $YEARDIG ),
#  result: "UNIQUE_NER_TAG", action: ( Annotate($0, myNER, "YEARXXX"), Annotate($0, myNERnormalized, $$0.value) ) }
  
#{ pattern: ( (/$UNSDIG/)? (/$YEARDIG/)? (/$CENTDIG/)? (/$SPECIALSDIG/)? (/$DECSDIG/)? (/y/)? (/$UNSDIG/)? ),
#  result: "UNIQUE_NER_TAG", action: (
#             :case {
#                    ($1 == NIL) => ( Annotate($0, myNER, "YEAR"), Annotate($0, myNERnormalized, Format("%d", Add(YEARS_MAP[$$2.text], CENTS_MAP[$$3.text]) ) ) ) ,
#                    :else =>  ( Annotate($0, myNER, "YEAR"), Annotate($0, myNERnormalized, Format("%d", Add(Multiply(YEARS_MAP[$$2.text],UNS_MAP[$$1.text]), CENTS_MAP[$$3.text]) ) ) ) 
#                 }
#				 )}

{ pattern: ( (/$UNSDIG/) (/$YEARDIG/) ),
  result: "UNIQUE_NER_TAG", action: ( Annotate($0, myNER, "NUML"), Annotate($0, myNERnormalized, Format("%d", Multiply(YEARS_MAP[$$2.text], UNS_MAP[$$1.text]) ) ) ) }
  
{ pattern: ( (/$YEARDIG/) ),
  result: "UNIQUE_NER_TAG", action: ( Annotate($0, myNER, "NUML"), Annotate($0, myNERnormalized, Format("%d", YEARS_MAP[$$1.text] ) ) ) }
  
{ pattern: ( (/$CENTDIG/) ),
  result: "UNIQUE_NER_TAG", action: ( Annotate($0, myNER, "NUML"), Annotate($0, myNERnormalized, Format("%d", CENTS_MAP[$$1.text] ) ) ) }
  
{ pattern: ( (/$SPECIALSDIG/) ),
  result: "UNIQUE_NER_TAG", action: ( Annotate($0, myNER, "NUML"), Annotate($0, myNERnormalized, Format("%d", SPECIALS_MAP[$$1.text] ) ) ) }
    
{ pattern: ( (/$UNSDIG/) ),
  result: "UNIQUE_NER_TAG", action: ( Annotate($0, myNER, "NUML"), Annotate($0, myNERnormalized, Format("%d", UNS_MAP[$$1.text] ) ) ) }
  
{ pattern: ( (/$DECSDIG/) ),
  result: "UNIQUE_NER_TAG", action: ( Annotate($0, myNER, "NUML"), Annotate($0, myNERnormalized, Format("%d", DECS_MAP[$$1.text] ) ) ) }

{ pattern: ( (/$DECSDIG/) /y/ (/$UNSDIG/) ),
  result: "UNIQUE_NER_TAG", action: ( Annotate($0, myNER, "NUML"), Annotate($0, myNERnormalized, Format("%d", Add(DECS_MAP[$$1.text], UNS_MAP[$$2.text]) ) ) ) }

  }
  
$OP = ( [ type:"myNER" ] )

{ 
    pattern: ( ($OP|$YEAR) ($OP|YEAR) ),
	result: "UNIQUE_NER_TAG", action: ( Annotate($0, myNER, "YEAR"), Annotate($0, myNERnormalized, Format("%d", Add($$1.value,$$2.value)) ) ) )